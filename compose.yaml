services:
  app:
    image: 'musicapp:latest'
    build:
      context: .
    container_name: app
    depends_on:
      db:
        condition: service_healthy
        restart: true
      s3:
        condition: service_started
    networks:
      - pg-network
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/musicapp
      - MINIO_ENDPOINT=http://s3:9001

  db:
    image: postgres:17.6-alpine3.22
    restart: always
    environment:
      POSTGRES_USER: username
      POSTGRES_DB: musicapp
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
      - ./musicapp-db:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - pg-network
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf",
               "-c", "hba_file=/etc/postgresql/pg_hba.conf",]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      start_period: 5s
      retries: 3

  adminer:
    image: adminer:5.4.0
    restart: always
    ports:
      - 12631:8080
    networks:
      - pg-network

  s3:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    container_name: minio
    restart: always
    networks:
      - pg-network
    volumes:
      - ./musicapp-s3:/minio/data
    ports:
      - 9000:9000
      - 9001:9001
    expose:
      - "9000"
      - "9001"
    command: minio server --address ":9001" --console-address ":9000" /minio/data

  createbuckets:
    image: minio/mc:RELEASE.2025-08-13T08-35-41Z
    depends_on:
      - s3
    networks:
      - pg-network
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set local http://s3:9001 minioadmin minioadmin;
      /usr/bin/mc mb local/musicapp-useruploads;
      /usr/bin/mc anonymous set public local/musicapp-useruploads;
      exit"


networks:
  pg-network:
    driver: bridge